// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.kotlin_version = '1.5.31'
    repositories {
        maven { url "https://maven.aliyun.com/nexus/content/groups/public" }
        maven { url "https://jitpack.io" }
        google()
        mavenCentral()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:8.0.0"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.6.10"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
        classpath "org.jetbrains.kotlin:kotlin-android-extensions:$kotlin_version"
    }
    subprojects {
        afterEvaluate { project ->
            if (project.plugins.hasPlugin('com.android.library') || project.plugins.hasPlugin('com.android.application')) {
                println "project: ${project.name} Namespace get: ${project.android.namespace}"
                def packageName = project.android.namespace ?: project.android.defaultConfig.applicationId ?: project.android.sourceSets.main.manifest.srcFile.text.find(/package="([^"]*)"/) ?: project.group
                project.android.namespace = packageName
                println "Namespace set to: ${packageName} for project: ${project.name}"
                def manifestFile = project.android.sourceSets.main.manifest.srcFile
                if (manifestFile.exists()) {
                    def manifestText = manifestFile.text
                    if (manifestText.contains('package=')) {
                        manifestText = manifestText.replaceAll(/package="[^"]*"/, "")
                        manifestFile.text = manifestText
                        println "Package attribute removed in AndroidManifest.xml for project: ${project.name}"
                    } else {
                        println "No package attribute found in AndroidManifest.xml for project: ${project.name}"
                    }
                } else {
                    println "AndroidManifest.xml not found for project: ${project.name}"
                }
            }
        }
    }
}


allprojects {
    repositories {
        maven { url "https://maven.aliyun.com/nexus/content/groups/public" }
        maven { url "https://jitpack.io" }
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}